// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

package io.axoniq.axonserver.grpc.event;

/**
 * <pre>
 * Request message to open an Event Stream from the Event Store. 
 * </pre>
 *
 * Protobuf type {@code io.axoniq.axonserver.grpc.event.GetEventsRequest}
 */
public  final class GetEventsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.axoniq.axonserver.grpc.event.GetEventsRequest)
    GetEventsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetEventsRequest.newBuilder() to construct.
  private GetEventsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetEventsRequest() {
    trackingToken_ = 0L;
    numberOfPermits_ = 0L;
    clientId_ = "";
    componentName_ = "";
    processor_ = "";
    blacklist_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GetEventsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            trackingToken_ = input.readInt64();
            break;
          }
          case 16: {

            numberOfPermits_ = input.readInt64();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            clientId_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            componentName_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            processor_ = s;
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              blacklist_ = new java.util.ArrayList<io.axoniq.axonserver.grpc.event.PayloadDescription>();
              mutable_bitField0_ |= 0x00000020;
            }
            blacklist_.add(
                input.readMessage(io.axoniq.axonserver.grpc.event.PayloadDescription.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        blacklist_ = java.util.Collections.unmodifiableList(blacklist_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.axoniq.axonserver.grpc.event.EventOuterClass.internal_static_io_axoniq_axonserver_grpc_event_GetEventsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.axoniq.axonserver.grpc.event.EventOuterClass.internal_static_io_axoniq_axonserver_grpc_event_GetEventsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.axoniq.axonserver.grpc.event.GetEventsRequest.class, io.axoniq.axonserver.grpc.event.GetEventsRequest.Builder.class);
  }

  private int bitField0_;
  public static final int TRACKING_TOKEN_FIELD_NUMBER = 1;
  private long trackingToken_;
  /**
   * <pre>
   * The token to start streaming from 
   * </pre>
   *
   * <code>int64 tracking_token = 1;</code>
   */
  public long getTrackingToken() {
    return trackingToken_;
  }

  public static final int NUMBER_OF_PERMITS_FIELD_NUMBER = 2;
  private long numberOfPermits_;
  /**
   * <pre>
   * The number of messages the server may send before it needs to wait for more permits 
   * </pre>
   *
   * <code>int64 number_of_permits = 2;</code>
   */
  public long getNumberOfPermits() {
    return numberOfPermits_;
  }

  public static final int CLIENT_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object clientId_;
  /**
   * <pre>
   * The unique identifier of this client instance. Used for monitoring. 
   * </pre>
   *
   * <code>string client_id = 3;</code>
   */
  public java.lang.String getClientId() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The unique identifier of this client instance. Used for monitoring. 
   * </pre>
   *
   * <code>string client_id = 3;</code>
   */
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPONENT_NAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object componentName_;
  /**
   * <pre>
   * The component name of this client instance. Used for monitoring. 
   * </pre>
   *
   * <code>string component_name = 4;</code>
   */
  public java.lang.String getComponentName() {
    java.lang.Object ref = componentName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      componentName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The component name of this client instance. Used for monitoring. 
   * </pre>
   *
   * <code>string component_name = 4;</code>
   */
  public com.google.protobuf.ByteString
      getComponentNameBytes() {
    java.lang.Object ref = componentName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      componentName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSOR_FIELD_NUMBER = 5;
  private volatile java.lang.Object processor_;
  /**
   * <pre>
   * The name of the processor requesting this stream. Used for monitoring. 
   * </pre>
   *
   * <code>string processor = 5;</code>
   */
  public java.lang.String getProcessor() {
    java.lang.Object ref = processor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the processor requesting this stream. Used for monitoring. 
   * </pre>
   *
   * <code>string processor = 5;</code>
   */
  public com.google.protobuf.ByteString
      getProcessorBytes() {
    java.lang.Object ref = processor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      processor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BLACKLIST_FIELD_NUMBER = 6;
  private java.util.List<io.axoniq.axonserver.grpc.event.PayloadDescription> blacklist_;
  /**
   * <pre>
   * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
   *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
   *time-outs and stale tokens on clients.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
   */
  public java.util.List<io.axoniq.axonserver.grpc.event.PayloadDescription> getBlacklistList() {
    return blacklist_;
  }
  /**
   * <pre>
   * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
   *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
   *time-outs and stale tokens on clients.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
   */
  public java.util.List<? extends io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder> 
      getBlacklistOrBuilderList() {
    return blacklist_;
  }
  /**
   * <pre>
   * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
   *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
   *time-outs and stale tokens on clients.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
   */
  public int getBlacklistCount() {
    return blacklist_.size();
  }
  /**
   * <pre>
   * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
   *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
   *time-outs and stale tokens on clients.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
   */
  public io.axoniq.axonserver.grpc.event.PayloadDescription getBlacklist(int index) {
    return blacklist_.get(index);
  }
  /**
   * <pre>
   * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
   *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
   *time-outs and stale tokens on clients.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
   */
  public io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder getBlacklistOrBuilder(
      int index) {
    return blacklist_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (trackingToken_ != 0L) {
      output.writeInt64(1, trackingToken_);
    }
    if (numberOfPermits_ != 0L) {
      output.writeInt64(2, numberOfPermits_);
    }
    if (!getClientIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, clientId_);
    }
    if (!getComponentNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, componentName_);
    }
    if (!getProcessorBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, processor_);
    }
    for (int i = 0; i < blacklist_.size(); i++) {
      output.writeMessage(6, blacklist_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (trackingToken_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, trackingToken_);
    }
    if (numberOfPermits_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, numberOfPermits_);
    }
    if (!getClientIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, clientId_);
    }
    if (!getComponentNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, componentName_);
    }
    if (!getProcessorBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, processor_);
    }
    for (int i = 0; i < blacklist_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, blacklist_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.axoniq.axonserver.grpc.event.GetEventsRequest)) {
      return super.equals(obj);
    }
    io.axoniq.axonserver.grpc.event.GetEventsRequest other = (io.axoniq.axonserver.grpc.event.GetEventsRequest) obj;

    boolean result = true;
    result = result && (getTrackingToken()
        == other.getTrackingToken());
    result = result && (getNumberOfPermits()
        == other.getNumberOfPermits());
    result = result && getClientId()
        .equals(other.getClientId());
    result = result && getComponentName()
        .equals(other.getComponentName());
    result = result && getProcessor()
        .equals(other.getProcessor());
    result = result && getBlacklistList()
        .equals(other.getBlacklistList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRACKING_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTrackingToken());
    hash = (37 * hash) + NUMBER_OF_PERMITS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumberOfPermits());
    hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getClientId().hashCode();
    hash = (37 * hash) + COMPONENT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getComponentName().hashCode();
    hash = (37 * hash) + PROCESSOR_FIELD_NUMBER;
    hash = (53 * hash) + getProcessor().hashCode();
    if (getBlacklistCount() > 0) {
      hash = (37 * hash) + BLACKLIST_FIELD_NUMBER;
      hash = (53 * hash) + getBlacklistList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.event.GetEventsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.axoniq.axonserver.grpc.event.GetEventsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request message to open an Event Stream from the Event Store. 
   * </pre>
   *
   * Protobuf type {@code io.axoniq.axonserver.grpc.event.GetEventsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.axoniq.axonserver.grpc.event.GetEventsRequest)
      io.axoniq.axonserver.grpc.event.GetEventsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.axoniq.axonserver.grpc.event.EventOuterClass.internal_static_io_axoniq_axonserver_grpc_event_GetEventsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.axoniq.axonserver.grpc.event.EventOuterClass.internal_static_io_axoniq_axonserver_grpc_event_GetEventsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.axoniq.axonserver.grpc.event.GetEventsRequest.class, io.axoniq.axonserver.grpc.event.GetEventsRequest.Builder.class);
    }

    // Construct using io.axoniq.axonserver.grpc.event.GetEventsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBlacklistFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      trackingToken_ = 0L;

      numberOfPermits_ = 0L;

      clientId_ = "";

      componentName_ = "";

      processor_ = "";

      if (blacklistBuilder_ == null) {
        blacklist_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        blacklistBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.axoniq.axonserver.grpc.event.EventOuterClass.internal_static_io_axoniq_axonserver_grpc_event_GetEventsRequest_descriptor;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.event.GetEventsRequest getDefaultInstanceForType() {
      return io.axoniq.axonserver.grpc.event.GetEventsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.event.GetEventsRequest build() {
      io.axoniq.axonserver.grpc.event.GetEventsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.event.GetEventsRequest buildPartial() {
      io.axoniq.axonserver.grpc.event.GetEventsRequest result = new io.axoniq.axonserver.grpc.event.GetEventsRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.trackingToken_ = trackingToken_;
      result.numberOfPermits_ = numberOfPermits_;
      result.clientId_ = clientId_;
      result.componentName_ = componentName_;
      result.processor_ = processor_;
      if (blacklistBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          blacklist_ = java.util.Collections.unmodifiableList(blacklist_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.blacklist_ = blacklist_;
      } else {
        result.blacklist_ = blacklistBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.axoniq.axonserver.grpc.event.GetEventsRequest) {
        return mergeFrom((io.axoniq.axonserver.grpc.event.GetEventsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.axoniq.axonserver.grpc.event.GetEventsRequest other) {
      if (other == io.axoniq.axonserver.grpc.event.GetEventsRequest.getDefaultInstance()) return this;
      if (other.getTrackingToken() != 0L) {
        setTrackingToken(other.getTrackingToken());
      }
      if (other.getNumberOfPermits() != 0L) {
        setNumberOfPermits(other.getNumberOfPermits());
      }
      if (!other.getClientId().isEmpty()) {
        clientId_ = other.clientId_;
        onChanged();
      }
      if (!other.getComponentName().isEmpty()) {
        componentName_ = other.componentName_;
        onChanged();
      }
      if (!other.getProcessor().isEmpty()) {
        processor_ = other.processor_;
        onChanged();
      }
      if (blacklistBuilder_ == null) {
        if (!other.blacklist_.isEmpty()) {
          if (blacklist_.isEmpty()) {
            blacklist_ = other.blacklist_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBlacklistIsMutable();
            blacklist_.addAll(other.blacklist_);
          }
          onChanged();
        }
      } else {
        if (!other.blacklist_.isEmpty()) {
          if (blacklistBuilder_.isEmpty()) {
            blacklistBuilder_.dispose();
            blacklistBuilder_ = null;
            blacklist_ = other.blacklist_;
            bitField0_ = (bitField0_ & ~0x00000020);
            blacklistBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBlacklistFieldBuilder() : null;
          } else {
            blacklistBuilder_.addAllMessages(other.blacklist_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.axoniq.axonserver.grpc.event.GetEventsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.axoniq.axonserver.grpc.event.GetEventsRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long trackingToken_ ;
    /**
     * <pre>
     * The token to start streaming from 
     * </pre>
     *
     * <code>int64 tracking_token = 1;</code>
     */
    public long getTrackingToken() {
      return trackingToken_;
    }
    /**
     * <pre>
     * The token to start streaming from 
     * </pre>
     *
     * <code>int64 tracking_token = 1;</code>
     */
    public Builder setTrackingToken(long value) {
      
      trackingToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token to start streaming from 
     * </pre>
     *
     * <code>int64 tracking_token = 1;</code>
     */
    public Builder clearTrackingToken() {
      
      trackingToken_ = 0L;
      onChanged();
      return this;
    }

    private long numberOfPermits_ ;
    /**
     * <pre>
     * The number of messages the server may send before it needs to wait for more permits 
     * </pre>
     *
     * <code>int64 number_of_permits = 2;</code>
     */
    public long getNumberOfPermits() {
      return numberOfPermits_;
    }
    /**
     * <pre>
     * The number of messages the server may send before it needs to wait for more permits 
     * </pre>
     *
     * <code>int64 number_of_permits = 2;</code>
     */
    public Builder setNumberOfPermits(long value) {
      
      numberOfPermits_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of messages the server may send before it needs to wait for more permits 
     * </pre>
     *
     * <code>int64 number_of_permits = 2;</code>
     */
    public Builder clearNumberOfPermits() {
      
      numberOfPermits_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object clientId_ = "";
    /**
     * <pre>
     * The unique identifier of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string client_id = 3;</code>
     */
    public java.lang.String getClientId() {
      java.lang.Object ref = clientId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The unique identifier of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string client_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The unique identifier of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string client_id = 3;</code>
     */
    public Builder setClientId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique identifier of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string client_id = 3;</code>
     */
    public Builder clearClientId() {
      
      clientId_ = getDefaultInstance().getClientId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique identifier of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string client_id = 3;</code>
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object componentName_ = "";
    /**
     * <pre>
     * The component name of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string component_name = 4;</code>
     */
    public java.lang.String getComponentName() {
      java.lang.Object ref = componentName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        componentName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The component name of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string component_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getComponentNameBytes() {
      java.lang.Object ref = componentName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        componentName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The component name of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string component_name = 4;</code>
     */
    public Builder setComponentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      componentName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The component name of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string component_name = 4;</code>
     */
    public Builder clearComponentName() {
      
      componentName_ = getDefaultInstance().getComponentName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The component name of this client instance. Used for monitoring. 
     * </pre>
     *
     * <code>string component_name = 4;</code>
     */
    public Builder setComponentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      componentName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object processor_ = "";
    /**
     * <pre>
     * The name of the processor requesting this stream. Used for monitoring. 
     * </pre>
     *
     * <code>string processor = 5;</code>
     */
    public java.lang.String getProcessor() {
      java.lang.Object ref = processor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the processor requesting this stream. Used for monitoring. 
     * </pre>
     *
     * <code>string processor = 5;</code>
     */
    public com.google.protobuf.ByteString
        getProcessorBytes() {
      java.lang.Object ref = processor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the processor requesting this stream. Used for monitoring. 
     * </pre>
     *
     * <code>string processor = 5;</code>
     */
    public Builder setProcessor(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      processor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the processor requesting this stream. Used for monitoring. 
     * </pre>
     *
     * <code>string processor = 5;</code>
     */
    public Builder clearProcessor() {
      
      processor_ = getDefaultInstance().getProcessor();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the processor requesting this stream. Used for monitoring. 
     * </pre>
     *
     * <code>string processor = 5;</code>
     */
    public Builder setProcessorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      processor_ = value;
      onChanged();
      return this;
    }

    private java.util.List<io.axoniq.axonserver.grpc.event.PayloadDescription> blacklist_ =
      java.util.Collections.emptyList();
    private void ensureBlacklistIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        blacklist_ = new java.util.ArrayList<io.axoniq.axonserver.grpc.event.PayloadDescription>(blacklist_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.axoniq.axonserver.grpc.event.PayloadDescription, io.axoniq.axonserver.grpc.event.PayloadDescription.Builder, io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder> blacklistBuilder_;

    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public java.util.List<io.axoniq.axonserver.grpc.event.PayloadDescription> getBlacklistList() {
      if (blacklistBuilder_ == null) {
        return java.util.Collections.unmodifiableList(blacklist_);
      } else {
        return blacklistBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public int getBlacklistCount() {
      if (blacklistBuilder_ == null) {
        return blacklist_.size();
      } else {
        return blacklistBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public io.axoniq.axonserver.grpc.event.PayloadDescription getBlacklist(int index) {
      if (blacklistBuilder_ == null) {
        return blacklist_.get(index);
      } else {
        return blacklistBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder setBlacklist(
        int index, io.axoniq.axonserver.grpc.event.PayloadDescription value) {
      if (blacklistBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlacklistIsMutable();
        blacklist_.set(index, value);
        onChanged();
      } else {
        blacklistBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder setBlacklist(
        int index, io.axoniq.axonserver.grpc.event.PayloadDescription.Builder builderForValue) {
      if (blacklistBuilder_ == null) {
        ensureBlacklistIsMutable();
        blacklist_.set(index, builderForValue.build());
        onChanged();
      } else {
        blacklistBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder addBlacklist(io.axoniq.axonserver.grpc.event.PayloadDescription value) {
      if (blacklistBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlacklistIsMutable();
        blacklist_.add(value);
        onChanged();
      } else {
        blacklistBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder addBlacklist(
        int index, io.axoniq.axonserver.grpc.event.PayloadDescription value) {
      if (blacklistBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlacklistIsMutable();
        blacklist_.add(index, value);
        onChanged();
      } else {
        blacklistBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder addBlacklist(
        io.axoniq.axonserver.grpc.event.PayloadDescription.Builder builderForValue) {
      if (blacklistBuilder_ == null) {
        ensureBlacklistIsMutable();
        blacklist_.add(builderForValue.build());
        onChanged();
      } else {
        blacklistBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder addBlacklist(
        int index, io.axoniq.axonserver.grpc.event.PayloadDescription.Builder builderForValue) {
      if (blacklistBuilder_ == null) {
        ensureBlacklistIsMutable();
        blacklist_.add(index, builderForValue.build());
        onChanged();
      } else {
        blacklistBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder addAllBlacklist(
        java.lang.Iterable<? extends io.axoniq.axonserver.grpc.event.PayloadDescription> values) {
      if (blacklistBuilder_ == null) {
        ensureBlacklistIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blacklist_);
        onChanged();
      } else {
        blacklistBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder clearBlacklist() {
      if (blacklistBuilder_ == null) {
        blacklist_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        blacklistBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public Builder removeBlacklist(int index) {
      if (blacklistBuilder_ == null) {
        ensureBlacklistIsMutable();
        blacklist_.remove(index);
        onChanged();
      } else {
        blacklistBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public io.axoniq.axonserver.grpc.event.PayloadDescription.Builder getBlacklistBuilder(
        int index) {
      return getBlacklistFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder getBlacklistOrBuilder(
        int index) {
      if (blacklistBuilder_ == null) {
        return blacklist_.get(index);  } else {
        return blacklistBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public java.util.List<? extends io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder> 
         getBlacklistOrBuilderList() {
      if (blacklistBuilder_ != null) {
        return blacklistBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(blacklist_);
      }
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public io.axoniq.axonserver.grpc.event.PayloadDescription.Builder addBlacklistBuilder() {
      return getBlacklistFieldBuilder().addBuilder(
          io.axoniq.axonserver.grpc.event.PayloadDescription.getDefaultInstance());
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public io.axoniq.axonserver.grpc.event.PayloadDescription.Builder addBlacklistBuilder(
        int index) {
      return getBlacklistFieldBuilder().addBuilder(
          index, io.axoniq.axonserver.grpc.event.PayloadDescription.getDefaultInstance());
    }
    /**
     * <pre>
     * An enumeration of payload types that need to be blacklisted. The Server will stop sending messages of these
     *types in order to reduce I/O. Note that the Server may occasionally send a blacklisted message to prevent
     *time-outs and stale tokens on clients.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.event.PayloadDescription blacklist = 6;</code>
     */
    public java.util.List<io.axoniq.axonserver.grpc.event.PayloadDescription.Builder> 
         getBlacklistBuilderList() {
      return getBlacklistFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.axoniq.axonserver.grpc.event.PayloadDescription, io.axoniq.axonserver.grpc.event.PayloadDescription.Builder, io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder> 
        getBlacklistFieldBuilder() {
      if (blacklistBuilder_ == null) {
        blacklistBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.axoniq.axonserver.grpc.event.PayloadDescription, io.axoniq.axonserver.grpc.event.PayloadDescription.Builder, io.axoniq.axonserver.grpc.event.PayloadDescriptionOrBuilder>(
                blacklist_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        blacklist_ = null;
      }
      return blacklistBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.axoniq.axonserver.grpc.event.GetEventsRequest)
  }

  // @@protoc_insertion_point(class_scope:io.axoniq.axonserver.grpc.event.GetEventsRequest)
  private static final io.axoniq.axonserver.grpc.event.GetEventsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.axoniq.axonserver.grpc.event.GetEventsRequest();
  }

  public static io.axoniq.axonserver.grpc.event.GetEventsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetEventsRequest>
      PARSER = new com.google.protobuf.AbstractParser<GetEventsRequest>() {
    @java.lang.Override
    public GetEventsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GetEventsRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GetEventsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetEventsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.axoniq.axonserver.grpc.event.GetEventsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

