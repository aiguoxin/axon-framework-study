// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control.proto

package io.axoniq.axonserver.grpc.control;

/**
 * <pre>
 * An instruction or information from the AxonServer Platform to the Application Node 
 * </pre>
 *
 * Protobuf type {@code io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction}
 */
public  final class PlatformOutboundInstruction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)
    PlatformOutboundInstructionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlatformOutboundInstruction.newBuilder() to construct.
  private PlatformOutboundInstruction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlatformOutboundInstruction() {
    instructionId_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PlatformOutboundInstruction(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.axoniq.axonserver.grpc.control.NodeInfo.Builder subBuilder = null;
            if (requestCase_ == 1) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.NodeInfo) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.NodeInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.NodeInfo) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 1;
            break;
          }
          case 26: {
            io.axoniq.axonserver.grpc.control.RequestReconnect.Builder subBuilder = null;
            if (requestCase_ == 3) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.RequestReconnect) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.RequestReconnect.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.RequestReconnect) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 3;
            break;
          }
          case 34: {
            io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder subBuilder = null;
            if (requestCase_ == 4) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 4;
            break;
          }
          case 42: {
            io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder subBuilder = null;
            if (requestCase_ == 5) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 5;
            break;
          }
          case 50: {
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder subBuilder = null;
            if (requestCase_ == 6) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 6;
            break;
          }
          case 58: {
            io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder subBuilder = null;
            if (requestCase_ == 7) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 7;
            break;
          }
          case 66: {
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder subBuilder = null;
            if (requestCase_ == 8) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 8;
            break;
          }
          case 74: {
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder subBuilder = null;
            if (requestCase_ == 9) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 9;
            break;
          }
          case 82: {
            io.axoniq.axonserver.grpc.control.Heartbeat.Builder subBuilder = null;
            if (requestCase_ == 10) {
              subBuilder = ((io.axoniq.axonserver.grpc.control.Heartbeat) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.control.Heartbeat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.control.Heartbeat) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 10;
            break;
          }
          case 90: {
            io.axoniq.axonserver.grpc.InstructionAck.Builder subBuilder = null;
            if (requestCase_ == 11) {
              subBuilder = ((io.axoniq.axonserver.grpc.InstructionAck) request_).toBuilder();
            }
            request_ =
                input.readMessage(io.axoniq.axonserver.grpc.InstructionAck.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.axoniq.axonserver.grpc.InstructionAck) request_);
              request_ = subBuilder.buildPartial();
            }
            requestCase_ = 11;
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            instructionId_ = s;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_PlatformOutboundInstruction_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_PlatformOutboundInstruction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.class, io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.Builder.class);
  }

  private int requestCase_ = 0;
  private java.lang.Object request_;
  public enum RequestCase
      implements com.google.protobuf.Internal.EnumLite {
    NODE_NOTIFICATION(1),
    REQUEST_RECONNECT(3),
    PAUSE_EVENT_PROCESSOR(4),
    START_EVENT_PROCESSOR(5),
    RELEASE_SEGMENT(6),
    REQUEST_EVENT_PROCESSOR_INFO(7),
    SPLIT_EVENT_PROCESSOR_SEGMENT(8),
    MERGE_EVENT_PROCESSOR_SEGMENT(9),
    HEARTBEAT(10),
    ACK(11),
    REQUEST_NOT_SET(0);
    private final int value;
    private RequestCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestCase valueOf(int value) {
      return forNumber(value);
    }

    public static RequestCase forNumber(int value) {
      switch (value) {
        case 1: return NODE_NOTIFICATION;
        case 3: return REQUEST_RECONNECT;
        case 4: return PAUSE_EVENT_PROCESSOR;
        case 5: return START_EVENT_PROCESSOR;
        case 6: return RELEASE_SEGMENT;
        case 7: return REQUEST_EVENT_PROCESSOR_INFO;
        case 8: return SPLIT_EVENT_PROCESSOR_SEGMENT;
        case 9: return MERGE_EVENT_PROCESSOR_SEGMENT;
        case 10: return HEARTBEAT;
        case 11: return ACK;
        case 0: return REQUEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RequestCase
  getRequestCase() {
    return RequestCase.forNumber(
        requestCase_);
  }

  public static final int NODE_NOTIFICATION_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
   */
  public boolean hasNodeNotification() {
    return requestCase_ == 1;
  }
  /**
   * <pre>
   * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
   */
  public io.axoniq.axonserver.grpc.control.NodeInfo getNodeNotification() {
    if (requestCase_ == 1) {
       return (io.axoniq.axonserver.grpc.control.NodeInfo) request_;
    }
    return io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
  }
  /**
   * <pre>
   * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
   */
  public io.axoniq.axonserver.grpc.control.NodeInfoOrBuilder getNodeNotificationOrBuilder() {
    if (requestCase_ == 1) {
       return (io.axoniq.axonserver.grpc.control.NodeInfo) request_;
    }
    return io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
  }

  public static final int REQUEST_RECONNECT_FIELD_NUMBER = 3;
  /**
   * <pre>
   * A request from AxonServer to the Application to migrate its connection to another node.
   *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
   *to request a new destination.
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
   */
  public boolean hasRequestReconnect() {
    return requestCase_ == 3;
  }
  /**
   * <pre>
   * A request from AxonServer to the Application to migrate its connection to another node.
   *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
   *to request a new destination.
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
   */
  public io.axoniq.axonserver.grpc.control.RequestReconnect getRequestReconnect() {
    if (requestCase_ == 3) {
       return (io.axoniq.axonserver.grpc.control.RequestReconnect) request_;
    }
    return io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
  }
  /**
   * <pre>
   * A request from AxonServer to the Application to migrate its connection to another node.
   *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
   *to request a new destination.
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
   */
  public io.axoniq.axonserver.grpc.control.RequestReconnectOrBuilder getRequestReconnectOrBuilder() {
    if (requestCase_ == 3) {
       return (io.axoniq.axonserver.grpc.control.RequestReconnect) request_;
    }
    return io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
  }

  public static final int PAUSE_EVENT_PROCESSOR_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Instruction from AxonServer to Pause a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
   */
  public boolean hasPauseEventProcessor() {
    return requestCase_ == 4;
  }
  /**
   * <pre>
   * Instruction from AxonServer to Pause a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReference getPauseEventProcessor() {
    if (requestCase_ == 4) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }
  /**
   * <pre>
   * Instruction from AxonServer to Pause a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getPauseEventProcessorOrBuilder() {
    if (requestCase_ == 4) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }

  public static final int START_EVENT_PROCESSOR_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Instruction from AxonServer to Start a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
   */
  public boolean hasStartEventProcessor() {
    return requestCase_ == 5;
  }
  /**
   * <pre>
   * Instruction from AxonServer to Start a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReference getStartEventProcessor() {
    if (requestCase_ == 5) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }
  /**
   * <pre>
   * Instruction from AxonServer to Start a Tracking Event Processor. 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getStartEventProcessorOrBuilder() {
    if (requestCase_ == 5) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }

  public static final int RELEASE_SEGMENT_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
   */
  public boolean hasReleaseSegment() {
    return requestCase_ == 6;
  }
  /**
   * <pre>
   * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getReleaseSegment() {
    if (requestCase_ == 6) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }
  /**
   * <pre>
   * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getReleaseSegmentOrBuilder() {
    if (requestCase_ == 6) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }

  public static final int REQUEST_EVENT_PROCESSOR_INFO_FIELD_NUMBER = 7;
  /**
   * <pre>
   * A request from AxonServer for status information of a specific Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
   */
  public boolean hasRequestEventProcessorInfo() {
    return requestCase_ == 7;
  }
  /**
   * <pre>
   * A request from AxonServer for status information of a specific Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReference getRequestEventProcessorInfo() {
    if (requestCase_ == 7) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }
  /**
   * <pre>
   * A request from AxonServer for status information of a specific Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getRequestEventProcessorInfoOrBuilder() {
    if (requestCase_ == 7) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
  }

  public static final int SPLIT_EVENT_PROCESSOR_SEGMENT_FIELD_NUMBER = 8;
  /**
   * <pre>
   * Instruction to split a Segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
   */
  public boolean hasSplitEventProcessorSegment() {
    return requestCase_ == 8;
  }
  /**
   * <pre>
   * Instruction to split a Segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getSplitEventProcessorSegment() {
    if (requestCase_ == 8) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }
  /**
   * <pre>
   * Instruction to split a Segment in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getSplitEventProcessorSegmentOrBuilder() {
    if (requestCase_ == 8) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }

  public static final int MERGE_EVENT_PROCESSOR_SEGMENT_FIELD_NUMBER = 9;
  /**
   * <pre>
   * Instruction to merge two Segments in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
   */
  public boolean hasMergeEventProcessorSegment() {
    return requestCase_ == 9;
  }
  /**
   * <pre>
   * Instruction to merge two Segments in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getMergeEventProcessorSegment() {
    if (requestCase_ == 9) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }
  /**
   * <pre>
   * Instruction to merge two Segments in a Tracking Event Processor 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getMergeEventProcessorSegmentOrBuilder() {
    if (requestCase_ == 9) {
       return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
    }
    return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
  }

  public static final int HEARTBEAT_FIELD_NUMBER = 10;
  /**
   * <pre>
   * This heartbeat is used by AxonFramework in order to check if the connection is still alive
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
   */
  public boolean hasHeartbeat() {
    return requestCase_ == 10;
  }
  /**
   * <pre>
   * This heartbeat is used by AxonFramework in order to check if the connection is still alive
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
   */
  public io.axoniq.axonserver.grpc.control.Heartbeat getHeartbeat() {
    if (requestCase_ == 10) {
       return (io.axoniq.axonserver.grpc.control.Heartbeat) request_;
    }
    return io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
  }
  /**
   * <pre>
   * This heartbeat is used by AxonFramework in order to check if the connection is still alive
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
   */
  public io.axoniq.axonserver.grpc.control.HeartbeatOrBuilder getHeartbeatOrBuilder() {
    if (requestCase_ == 10) {
       return (io.axoniq.axonserver.grpc.control.Heartbeat) request_;
    }
    return io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
  }

  public static final int ACK_FIELD_NUMBER = 11;
  /**
   * <pre>
   * Acknowledgement of previously sent instruction via inbound stream 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
   */
  public boolean hasAck() {
    return requestCase_ == 11;
  }
  /**
   * <pre>
   * Acknowledgement of previously sent instruction via inbound stream 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
   */
  public io.axoniq.axonserver.grpc.InstructionAck getAck() {
    if (requestCase_ == 11) {
       return (io.axoniq.axonserver.grpc.InstructionAck) request_;
    }
    return io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
  }
  /**
   * <pre>
   * Acknowledgement of previously sent instruction via inbound stream 
   * </pre>
   *
   * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
   */
  public io.axoniq.axonserver.grpc.InstructionAckOrBuilder getAckOrBuilder() {
    if (requestCase_ == 11) {
       return (io.axoniq.axonserver.grpc.InstructionAck) request_;
    }
    return io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
  }

  public static final int INSTRUCTION_ID_FIELD_NUMBER = 12;
  private volatile java.lang.Object instructionId_;
  /**
   * <pre>
   * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
   * </pre>
   *
   * <code>string instruction_id = 12;</code>
   */
  public java.lang.String getInstructionId() {
    java.lang.Object ref = instructionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      instructionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
   * </pre>
   *
   * <code>string instruction_id = 12;</code>
   */
  public com.google.protobuf.ByteString
      getInstructionIdBytes() {
    java.lang.Object ref = instructionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      instructionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (requestCase_ == 1) {
      output.writeMessage(1, (io.axoniq.axonserver.grpc.control.NodeInfo) request_);
    }
    if (requestCase_ == 3) {
      output.writeMessage(3, (io.axoniq.axonserver.grpc.control.RequestReconnect) request_);
    }
    if (requestCase_ == 4) {
      output.writeMessage(4, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 5) {
      output.writeMessage(5, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 6) {
      output.writeMessage(6, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 7) {
      output.writeMessage(7, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 8) {
      output.writeMessage(8, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 9) {
      output.writeMessage(9, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 10) {
      output.writeMessage(10, (io.axoniq.axonserver.grpc.control.Heartbeat) request_);
    }
    if (requestCase_ == 11) {
      output.writeMessage(11, (io.axoniq.axonserver.grpc.InstructionAck) request_);
    }
    if (!getInstructionIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, instructionId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requestCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.axoniq.axonserver.grpc.control.NodeInfo) request_);
    }
    if (requestCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.axoniq.axonserver.grpc.control.RequestReconnect) request_);
    }
    if (requestCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_);
    }
    if (requestCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_);
    }
    if (requestCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (io.axoniq.axonserver.grpc.control.Heartbeat) request_);
    }
    if (requestCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (io.axoniq.axonserver.grpc.InstructionAck) request_);
    }
    if (!getInstructionIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, instructionId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)) {
      return super.equals(obj);
    }
    io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction other = (io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction) obj;

    boolean result = true;
    result = result && getInstructionId()
        .equals(other.getInstructionId());
    result = result && getRequestCase().equals(
        other.getRequestCase());
    if (!result) return false;
    switch (requestCase_) {
      case 1:
        result = result && getNodeNotification()
            .equals(other.getNodeNotification());
        break;
      case 3:
        result = result && getRequestReconnect()
            .equals(other.getRequestReconnect());
        break;
      case 4:
        result = result && getPauseEventProcessor()
            .equals(other.getPauseEventProcessor());
        break;
      case 5:
        result = result && getStartEventProcessor()
            .equals(other.getStartEventProcessor());
        break;
      case 6:
        result = result && getReleaseSegment()
            .equals(other.getReleaseSegment());
        break;
      case 7:
        result = result && getRequestEventProcessorInfo()
            .equals(other.getRequestEventProcessorInfo());
        break;
      case 8:
        result = result && getSplitEventProcessorSegment()
            .equals(other.getSplitEventProcessorSegment());
        break;
      case 9:
        result = result && getMergeEventProcessorSegment()
            .equals(other.getMergeEventProcessorSegment());
        break;
      case 10:
        result = result && getHeartbeat()
            .equals(other.getHeartbeat());
        break;
      case 11:
        result = result && getAck()
            .equals(other.getAck());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INSTRUCTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getInstructionId().hashCode();
    switch (requestCase_) {
      case 1:
        hash = (37 * hash) + NODE_NOTIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getNodeNotification().hashCode();
        break;
      case 3:
        hash = (37 * hash) + REQUEST_RECONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getRequestReconnect().hashCode();
        break;
      case 4:
        hash = (37 * hash) + PAUSE_EVENT_PROCESSOR_FIELD_NUMBER;
        hash = (53 * hash) + getPauseEventProcessor().hashCode();
        break;
      case 5:
        hash = (37 * hash) + START_EVENT_PROCESSOR_FIELD_NUMBER;
        hash = (53 * hash) + getStartEventProcessor().hashCode();
        break;
      case 6:
        hash = (37 * hash) + RELEASE_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getReleaseSegment().hashCode();
        break;
      case 7:
        hash = (37 * hash) + REQUEST_EVENT_PROCESSOR_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getRequestEventProcessorInfo().hashCode();
        break;
      case 8:
        hash = (37 * hash) + SPLIT_EVENT_PROCESSOR_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getSplitEventProcessorSegment().hashCode();
        break;
      case 9:
        hash = (37 * hash) + MERGE_EVENT_PROCESSOR_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getMergeEventProcessorSegment().hashCode();
        break;
      case 10:
        hash = (37 * hash) + HEARTBEAT_FIELD_NUMBER;
        hash = (53 * hash) + getHeartbeat().hashCode();
        break;
      case 11:
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + getAck().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An instruction or information from the AxonServer Platform to the Application Node 
   * </pre>
   *
   * Protobuf type {@code io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)
      io.axoniq.axonserver.grpc.control.PlatformOutboundInstructionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_PlatformOutboundInstruction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_PlatformOutboundInstruction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.class, io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.Builder.class);
    }

    // Construct using io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      instructionId_ = "";

      requestCase_ = 0;
      request_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_PlatformOutboundInstruction_descriptor;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction getDefaultInstanceForType() {
      return io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.getDefaultInstance();
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction build() {
      io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction buildPartial() {
      io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction result = new io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction(this);
      if (requestCase_ == 1) {
        if (nodeNotificationBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = nodeNotificationBuilder_.build();
        }
      }
      if (requestCase_ == 3) {
        if (requestReconnectBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestReconnectBuilder_.build();
        }
      }
      if (requestCase_ == 4) {
        if (pauseEventProcessorBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = pauseEventProcessorBuilder_.build();
        }
      }
      if (requestCase_ == 5) {
        if (startEventProcessorBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = startEventProcessorBuilder_.build();
        }
      }
      if (requestCase_ == 6) {
        if (releaseSegmentBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = releaseSegmentBuilder_.build();
        }
      }
      if (requestCase_ == 7) {
        if (requestEventProcessorInfoBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestEventProcessorInfoBuilder_.build();
        }
      }
      if (requestCase_ == 8) {
        if (splitEventProcessorSegmentBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = splitEventProcessorSegmentBuilder_.build();
        }
      }
      if (requestCase_ == 9) {
        if (mergeEventProcessorSegmentBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = mergeEventProcessorSegmentBuilder_.build();
        }
      }
      if (requestCase_ == 10) {
        if (heartbeatBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = heartbeatBuilder_.build();
        }
      }
      if (requestCase_ == 11) {
        if (ackBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = ackBuilder_.build();
        }
      }
      result.instructionId_ = instructionId_;
      result.requestCase_ = requestCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction) {
        return mergeFrom((io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction other) {
      if (other == io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.getDefaultInstance()) return this;
      if (!other.getInstructionId().isEmpty()) {
        instructionId_ = other.instructionId_;
        onChanged();
      }
      switch (other.getRequestCase()) {
        case NODE_NOTIFICATION: {
          mergeNodeNotification(other.getNodeNotification());
          break;
        }
        case REQUEST_RECONNECT: {
          mergeRequestReconnect(other.getRequestReconnect());
          break;
        }
        case PAUSE_EVENT_PROCESSOR: {
          mergePauseEventProcessor(other.getPauseEventProcessor());
          break;
        }
        case START_EVENT_PROCESSOR: {
          mergeStartEventProcessor(other.getStartEventProcessor());
          break;
        }
        case RELEASE_SEGMENT: {
          mergeReleaseSegment(other.getReleaseSegment());
          break;
        }
        case REQUEST_EVENT_PROCESSOR_INFO: {
          mergeRequestEventProcessorInfo(other.getRequestEventProcessorInfo());
          break;
        }
        case SPLIT_EVENT_PROCESSOR_SEGMENT: {
          mergeSplitEventProcessorSegment(other.getSplitEventProcessorSegment());
          break;
        }
        case MERGE_EVENT_PROCESSOR_SEGMENT: {
          mergeMergeEventProcessorSegment(other.getMergeEventProcessorSegment());
          break;
        }
        case HEARTBEAT: {
          mergeHeartbeat(other.getHeartbeat());
          break;
        }
        case ACK: {
          mergeAck(other.getAck());
          break;
        }
        case REQUEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int requestCase_ = 0;
    private java.lang.Object request_;
    public RequestCase
        getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public Builder clearRequest() {
      requestCase_ = 0;
      request_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.NodeInfo, io.axoniq.axonserver.grpc.control.NodeInfo.Builder, io.axoniq.axonserver.grpc.control.NodeInfoOrBuilder> nodeNotificationBuilder_;
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public boolean hasNodeNotification() {
      return requestCase_ == 1;
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public io.axoniq.axonserver.grpc.control.NodeInfo getNodeNotification() {
      if (nodeNotificationBuilder_ == null) {
        if (requestCase_ == 1) {
          return (io.axoniq.axonserver.grpc.control.NodeInfo) request_;
        }
        return io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
      } else {
        if (requestCase_ == 1) {
          return nodeNotificationBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public Builder setNodeNotification(io.axoniq.axonserver.grpc.control.NodeInfo value) {
      if (nodeNotificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        nodeNotificationBuilder_.setMessage(value);
      }
      requestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public Builder setNodeNotification(
        io.axoniq.axonserver.grpc.control.NodeInfo.Builder builderForValue) {
      if (nodeNotificationBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        nodeNotificationBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public Builder mergeNodeNotification(io.axoniq.axonserver.grpc.control.NodeInfo value) {
      if (nodeNotificationBuilder_ == null) {
        if (requestCase_ == 1 &&
            request_ != io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.NodeInfo.newBuilder((io.axoniq.axonserver.grpc.control.NodeInfo) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 1) {
          nodeNotificationBuilder_.mergeFrom(value);
        }
        nodeNotificationBuilder_.setMessage(value);
      }
      requestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public Builder clearNodeNotification() {
      if (nodeNotificationBuilder_ == null) {
        if (requestCase_ == 1) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 1) {
          requestCase_ = 0;
          request_ = null;
        }
        nodeNotificationBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public io.axoniq.axonserver.grpc.control.NodeInfo.Builder getNodeNotificationBuilder() {
      return getNodeNotificationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    public io.axoniq.axonserver.grpc.control.NodeInfoOrBuilder getNodeNotificationOrBuilder() {
      if ((requestCase_ == 1) && (nodeNotificationBuilder_ != null)) {
        return nodeNotificationBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 1) {
          return (io.axoniq.axonserver.grpc.control.NodeInfo) request_;
        }
        return io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Information provided by AxonServer which provides information about the AxonServer node the application is connected with 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.NodeInfo node_notification = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.NodeInfo, io.axoniq.axonserver.grpc.control.NodeInfo.Builder, io.axoniq.axonserver.grpc.control.NodeInfoOrBuilder> 
        getNodeNotificationFieldBuilder() {
      if (nodeNotificationBuilder_ == null) {
        if (!(requestCase_ == 1)) {
          request_ = io.axoniq.axonserver.grpc.control.NodeInfo.getDefaultInstance();
        }
        nodeNotificationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.NodeInfo, io.axoniq.axonserver.grpc.control.NodeInfo.Builder, io.axoniq.axonserver.grpc.control.NodeInfoOrBuilder>(
                (io.axoniq.axonserver.grpc.control.NodeInfo) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 1;
      onChanged();;
      return nodeNotificationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.RequestReconnect, io.axoniq.axonserver.grpc.control.RequestReconnect.Builder, io.axoniq.axonserver.grpc.control.RequestReconnectOrBuilder> requestReconnectBuilder_;
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public boolean hasRequestReconnect() {
      return requestCase_ == 3;
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public io.axoniq.axonserver.grpc.control.RequestReconnect getRequestReconnect() {
      if (requestReconnectBuilder_ == null) {
        if (requestCase_ == 3) {
          return (io.axoniq.axonserver.grpc.control.RequestReconnect) request_;
        }
        return io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
      } else {
        if (requestCase_ == 3) {
          return requestReconnectBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public Builder setRequestReconnect(io.axoniq.axonserver.grpc.control.RequestReconnect value) {
      if (requestReconnectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        requestReconnectBuilder_.setMessage(value);
      }
      requestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public Builder setRequestReconnect(
        io.axoniq.axonserver.grpc.control.RequestReconnect.Builder builderForValue) {
      if (requestReconnectBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        requestReconnectBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public Builder mergeRequestReconnect(io.axoniq.axonserver.grpc.control.RequestReconnect value) {
      if (requestReconnectBuilder_ == null) {
        if (requestCase_ == 3 &&
            request_ != io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.RequestReconnect.newBuilder((io.axoniq.axonserver.grpc.control.RequestReconnect) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 3) {
          requestReconnectBuilder_.mergeFrom(value);
        }
        requestReconnectBuilder_.setMessage(value);
      }
      requestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public Builder clearRequestReconnect() {
      if (requestReconnectBuilder_ == null) {
        if (requestCase_ == 3) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 3) {
          requestCase_ = 0;
          request_ = null;
        }
        requestReconnectBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public io.axoniq.axonserver.grpc.control.RequestReconnect.Builder getRequestReconnectBuilder() {
      return getRequestReconnectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    public io.axoniq.axonserver.grpc.control.RequestReconnectOrBuilder getRequestReconnectOrBuilder() {
      if ((requestCase_ == 3) && (requestReconnectBuilder_ != null)) {
        return requestReconnectBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 3) {
          return (io.axoniq.axonserver.grpc.control.RequestReconnect) request_;
        }
        return io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A request from AxonServer to the Application to migrate its connection to another node.
     *Clients SHOULD honor this request by closing their current connection, and using the GetPlatformServer RPC
     *to request a new destination.
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.RequestReconnect request_reconnect = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.RequestReconnect, io.axoniq.axonserver.grpc.control.RequestReconnect.Builder, io.axoniq.axonserver.grpc.control.RequestReconnectOrBuilder> 
        getRequestReconnectFieldBuilder() {
      if (requestReconnectBuilder_ == null) {
        if (!(requestCase_ == 3)) {
          request_ = io.axoniq.axonserver.grpc.control.RequestReconnect.getDefaultInstance();
        }
        requestReconnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.RequestReconnect, io.axoniq.axonserver.grpc.control.RequestReconnect.Builder, io.axoniq.axonserver.grpc.control.RequestReconnectOrBuilder>(
                (io.axoniq.axonserver.grpc.control.RequestReconnect) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 3;
      onChanged();;
      return requestReconnectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> pauseEventProcessorBuilder_;
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public boolean hasPauseEventProcessor() {
      return requestCase_ == 4;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference getPauseEventProcessor() {
      if (pauseEventProcessorBuilder_ == null) {
        if (requestCase_ == 4) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      } else {
        if (requestCase_ == 4) {
          return pauseEventProcessorBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public Builder setPauseEventProcessor(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (pauseEventProcessorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        pauseEventProcessorBuilder_.setMessage(value);
      }
      requestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public Builder setPauseEventProcessor(
        io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder builderForValue) {
      if (pauseEventProcessorBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        pauseEventProcessorBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public Builder mergePauseEventProcessor(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (pauseEventProcessorBuilder_ == null) {
        if (requestCase_ == 4 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 4) {
          pauseEventProcessorBuilder_.mergeFrom(value);
        }
        pauseEventProcessorBuilder_.setMessage(value);
      }
      requestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public Builder clearPauseEventProcessor() {
      if (pauseEventProcessorBuilder_ == null) {
        if (requestCase_ == 4) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 4) {
          requestCase_ = 0;
          request_ = null;
        }
        pauseEventProcessorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder getPauseEventProcessorBuilder() {
      return getPauseEventProcessorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getPauseEventProcessorOrBuilder() {
      if ((requestCase_ == 4) && (pauseEventProcessorBuilder_ != null)) {
        return pauseEventProcessorBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 4) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Pause a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference pause_event_processor = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> 
        getPauseEventProcessorFieldBuilder() {
      if (pauseEventProcessorBuilder_ == null) {
        if (!(requestCase_ == 4)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
        }
        pauseEventProcessorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 4;
      onChanged();;
      return pauseEventProcessorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> startEventProcessorBuilder_;
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public boolean hasStartEventProcessor() {
      return requestCase_ == 5;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference getStartEventProcessor() {
      if (startEventProcessorBuilder_ == null) {
        if (requestCase_ == 5) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      } else {
        if (requestCase_ == 5) {
          return startEventProcessorBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public Builder setStartEventProcessor(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (startEventProcessorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        startEventProcessorBuilder_.setMessage(value);
      }
      requestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public Builder setStartEventProcessor(
        io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder builderForValue) {
      if (startEventProcessorBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        startEventProcessorBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public Builder mergeStartEventProcessor(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (startEventProcessorBuilder_ == null) {
        if (requestCase_ == 5 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 5) {
          startEventProcessorBuilder_.mergeFrom(value);
        }
        startEventProcessorBuilder_.setMessage(value);
      }
      requestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public Builder clearStartEventProcessor() {
      if (startEventProcessorBuilder_ == null) {
        if (requestCase_ == 5) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 5) {
          requestCase_ = 0;
          request_ = null;
        }
        startEventProcessorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder getStartEventProcessorBuilder() {
      return getStartEventProcessorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getStartEventProcessorOrBuilder() {
      if ((requestCase_ == 5) && (startEventProcessorBuilder_ != null)) {
        return startEventProcessorBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 5) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Start a Tracking Event Processor. 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference start_event_processor = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> 
        getStartEventProcessorFieldBuilder() {
      if (startEventProcessorBuilder_ == null) {
        if (!(requestCase_ == 5)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
        }
        startEventProcessorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 5;
      onChanged();;
      return startEventProcessorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> releaseSegmentBuilder_;
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public boolean hasReleaseSegment() {
      return requestCase_ == 6;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getReleaseSegment() {
      if (releaseSegmentBuilder_ == null) {
        if (requestCase_ == 6) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      } else {
        if (requestCase_ == 6) {
          return releaseSegmentBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public Builder setReleaseSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (releaseSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        releaseSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public Builder setReleaseSegment(
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder builderForValue) {
      if (releaseSegmentBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        releaseSegmentBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public Builder mergeReleaseSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (releaseSegmentBuilder_ == null) {
        if (requestCase_ == 6 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 6) {
          releaseSegmentBuilder_.mergeFrom(value);
        }
        releaseSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public Builder clearReleaseSegment() {
      if (releaseSegmentBuilder_ == null) {
        if (requestCase_ == 6) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 6) {
          requestCase_ = 0;
          request_ = null;
        }
        releaseSegmentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder getReleaseSegmentBuilder() {
      return getReleaseSegmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getReleaseSegmentOrBuilder() {
      if ((requestCase_ == 6) && (releaseSegmentBuilder_ != null)) {
        return releaseSegmentBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 6) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction from AxonServer to Release a specific segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference release_segment = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> 
        getReleaseSegmentFieldBuilder() {
      if (releaseSegmentBuilder_ == null) {
        if (!(requestCase_ == 6)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
        }
        releaseSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 6;
      onChanged();;
      return releaseSegmentBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> requestEventProcessorInfoBuilder_;
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public boolean hasRequestEventProcessorInfo() {
      return requestCase_ == 7;
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference getRequestEventProcessorInfo() {
      if (requestEventProcessorInfoBuilder_ == null) {
        if (requestCase_ == 7) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      } else {
        if (requestCase_ == 7) {
          return requestEventProcessorInfoBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public Builder setRequestEventProcessorInfo(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (requestEventProcessorInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        requestEventProcessorInfoBuilder_.setMessage(value);
      }
      requestCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public Builder setRequestEventProcessorInfo(
        io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder builderForValue) {
      if (requestEventProcessorInfoBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        requestEventProcessorInfoBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public Builder mergeRequestEventProcessorInfo(io.axoniq.axonserver.grpc.control.EventProcessorReference value) {
      if (requestEventProcessorInfoBuilder_ == null) {
        if (requestCase_ == 7 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 7) {
          requestEventProcessorInfoBuilder_.mergeFrom(value);
        }
        requestEventProcessorInfoBuilder_.setMessage(value);
      }
      requestCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public Builder clearRequestEventProcessorInfo() {
      if (requestEventProcessorInfoBuilder_ == null) {
        if (requestCase_ == 7) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 7) {
          requestCase_ = 0;
          request_ = null;
        }
        requestEventProcessorInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder getRequestEventProcessorInfoBuilder() {
      return getRequestEventProcessorInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder getRequestEventProcessorInfoOrBuilder() {
      if ((requestCase_ == 7) && (requestEventProcessorInfoBuilder_ != null)) {
        return requestEventProcessorInfoBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 7) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A request from AxonServer for status information of a specific Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorReference request_event_processor_info = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder> 
        getRequestEventProcessorInfoFieldBuilder() {
      if (requestEventProcessorInfoBuilder_ == null) {
        if (!(requestCase_ == 7)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorReference.getDefaultInstance();
        }
        requestEventProcessorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorReference, io.axoniq.axonserver.grpc.control.EventProcessorReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 7;
      onChanged();;
      return requestEventProcessorInfoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> splitEventProcessorSegmentBuilder_;
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public boolean hasSplitEventProcessorSegment() {
      return requestCase_ == 8;
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getSplitEventProcessorSegment() {
      if (splitEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 8) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      } else {
        if (requestCase_ == 8) {
          return splitEventProcessorSegmentBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public Builder setSplitEventProcessorSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (splitEventProcessorSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        splitEventProcessorSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public Builder setSplitEventProcessorSegment(
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder builderForValue) {
      if (splitEventProcessorSegmentBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        splitEventProcessorSegmentBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public Builder mergeSplitEventProcessorSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (splitEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 8 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 8) {
          splitEventProcessorSegmentBuilder_.mergeFrom(value);
        }
        splitEventProcessorSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public Builder clearSplitEventProcessorSegment() {
      if (splitEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 8) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 8) {
          requestCase_ = 0;
          request_ = null;
        }
        splitEventProcessorSegmentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder getSplitEventProcessorSegmentBuilder() {
      return getSplitEventProcessorSegmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getSplitEventProcessorSegmentOrBuilder() {
      if ((requestCase_ == 8) && (splitEventProcessorSegmentBuilder_ != null)) {
        return splitEventProcessorSegmentBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 8) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction to split a Segment in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference split_event_processor_segment = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> 
        getSplitEventProcessorSegmentFieldBuilder() {
      if (splitEventProcessorSegmentBuilder_ == null) {
        if (!(requestCase_ == 8)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
        }
        splitEventProcessorSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 8;
      onChanged();;
      return splitEventProcessorSegmentBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> mergeEventProcessorSegmentBuilder_;
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public boolean hasMergeEventProcessorSegment() {
      return requestCase_ == 9;
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference getMergeEventProcessorSegment() {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 9) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      } else {
        if (requestCase_ == 9) {
          return mergeEventProcessorSegmentBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public Builder setMergeEventProcessorSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        mergeEventProcessorSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public Builder setMergeEventProcessorSegment(
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder builderForValue) {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        mergeEventProcessorSegmentBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public Builder mergeMergeEventProcessorSegment(io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference value) {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 9 &&
            request_ != io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.newBuilder((io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 9) {
          mergeEventProcessorSegmentBuilder_.mergeFrom(value);
        }
        mergeEventProcessorSegmentBuilder_.setMessage(value);
      }
      requestCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public Builder clearMergeEventProcessorSegment() {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        if (requestCase_ == 9) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 9) {
          requestCase_ = 0;
          request_ = null;
        }
        mergeEventProcessorSegmentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder getMergeEventProcessorSegmentBuilder() {
      return getMergeEventProcessorSegmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder getMergeEventProcessorSegmentOrBuilder() {
      if ((requestCase_ == 9) && (mergeEventProcessorSegmentBuilder_ != null)) {
        return mergeEventProcessorSegmentBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 9) {
          return (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_;
        }
        return io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Instruction to merge two Segments in a Tracking Event Processor 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference merge_event_processor_segment = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder> 
        getMergeEventProcessorSegmentFieldBuilder() {
      if (mergeEventProcessorSegmentBuilder_ == null) {
        if (!(requestCase_ == 9)) {
          request_ = io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.getDefaultInstance();
        }
        mergeEventProcessorSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference.Builder, io.axoniq.axonserver.grpc.control.EventProcessorSegmentReferenceOrBuilder>(
                (io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 9;
      onChanged();;
      return mergeEventProcessorSegmentBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.Heartbeat, io.axoniq.axonserver.grpc.control.Heartbeat.Builder, io.axoniq.axonserver.grpc.control.HeartbeatOrBuilder> heartbeatBuilder_;
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public boolean hasHeartbeat() {
      return requestCase_ == 10;
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public io.axoniq.axonserver.grpc.control.Heartbeat getHeartbeat() {
      if (heartbeatBuilder_ == null) {
        if (requestCase_ == 10) {
          return (io.axoniq.axonserver.grpc.control.Heartbeat) request_;
        }
        return io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
      } else {
        if (requestCase_ == 10) {
          return heartbeatBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public Builder setHeartbeat(io.axoniq.axonserver.grpc.control.Heartbeat value) {
      if (heartbeatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        heartbeatBuilder_.setMessage(value);
      }
      requestCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public Builder setHeartbeat(
        io.axoniq.axonserver.grpc.control.Heartbeat.Builder builderForValue) {
      if (heartbeatBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        heartbeatBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public Builder mergeHeartbeat(io.axoniq.axonserver.grpc.control.Heartbeat value) {
      if (heartbeatBuilder_ == null) {
        if (requestCase_ == 10 &&
            request_ != io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.control.Heartbeat.newBuilder((io.axoniq.axonserver.grpc.control.Heartbeat) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 10) {
          heartbeatBuilder_.mergeFrom(value);
        }
        heartbeatBuilder_.setMessage(value);
      }
      requestCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public Builder clearHeartbeat() {
      if (heartbeatBuilder_ == null) {
        if (requestCase_ == 10) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 10) {
          requestCase_ = 0;
          request_ = null;
        }
        heartbeatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public io.axoniq.axonserver.grpc.control.Heartbeat.Builder getHeartbeatBuilder() {
      return getHeartbeatFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    public io.axoniq.axonserver.grpc.control.HeartbeatOrBuilder getHeartbeatOrBuilder() {
      if ((requestCase_ == 10) && (heartbeatBuilder_ != null)) {
        return heartbeatBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 10) {
          return (io.axoniq.axonserver.grpc.control.Heartbeat) request_;
        }
        return io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * This heartbeat is used by AxonFramework in order to check if the connection is still alive
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.Heartbeat, io.axoniq.axonserver.grpc.control.Heartbeat.Builder, io.axoniq.axonserver.grpc.control.HeartbeatOrBuilder> 
        getHeartbeatFieldBuilder() {
      if (heartbeatBuilder_ == null) {
        if (!(requestCase_ == 10)) {
          request_ = io.axoniq.axonserver.grpc.control.Heartbeat.getDefaultInstance();
        }
        heartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.Heartbeat, io.axoniq.axonserver.grpc.control.Heartbeat.Builder, io.axoniq.axonserver.grpc.control.HeartbeatOrBuilder>(
                (io.axoniq.axonserver.grpc.control.Heartbeat) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 10;
      onChanged();;
      return heartbeatBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.InstructionAck, io.axoniq.axonserver.grpc.InstructionAck.Builder, io.axoniq.axonserver.grpc.InstructionAckOrBuilder> ackBuilder_;
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public boolean hasAck() {
      return requestCase_ == 11;
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public io.axoniq.axonserver.grpc.InstructionAck getAck() {
      if (ackBuilder_ == null) {
        if (requestCase_ == 11) {
          return (io.axoniq.axonserver.grpc.InstructionAck) request_;
        }
        return io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
      } else {
        if (requestCase_ == 11) {
          return ackBuilder_.getMessage();
        }
        return io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public Builder setAck(io.axoniq.axonserver.grpc.InstructionAck value) {
      if (ackBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        ackBuilder_.setMessage(value);
      }
      requestCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public Builder setAck(
        io.axoniq.axonserver.grpc.InstructionAck.Builder builderForValue) {
      if (ackBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        ackBuilder_.setMessage(builderForValue.build());
      }
      requestCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public Builder mergeAck(io.axoniq.axonserver.grpc.InstructionAck value) {
      if (ackBuilder_ == null) {
        if (requestCase_ == 11 &&
            request_ != io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance()) {
          request_ = io.axoniq.axonserver.grpc.InstructionAck.newBuilder((io.axoniq.axonserver.grpc.InstructionAck) request_)
              .mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        if (requestCase_ == 11) {
          ackBuilder_.mergeFrom(value);
        }
        ackBuilder_.setMessage(value);
      }
      requestCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public Builder clearAck() {
      if (ackBuilder_ == null) {
        if (requestCase_ == 11) {
          requestCase_ = 0;
          request_ = null;
          onChanged();
        }
      } else {
        if (requestCase_ == 11) {
          requestCase_ = 0;
          request_ = null;
        }
        ackBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public io.axoniq.axonserver.grpc.InstructionAck.Builder getAckBuilder() {
      return getAckFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    public io.axoniq.axonserver.grpc.InstructionAckOrBuilder getAckOrBuilder() {
      if ((requestCase_ == 11) && (ackBuilder_ != null)) {
        return ackBuilder_.getMessageOrBuilder();
      } else {
        if (requestCase_ == 11) {
          return (io.axoniq.axonserver.grpc.InstructionAck) request_;
        }
        return io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Acknowledgement of previously sent instruction via inbound stream 
     * </pre>
     *
     * <code>.io.axoniq.axonserver.grpc.InstructionAck ack = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.axoniq.axonserver.grpc.InstructionAck, io.axoniq.axonserver.grpc.InstructionAck.Builder, io.axoniq.axonserver.grpc.InstructionAckOrBuilder> 
        getAckFieldBuilder() {
      if (ackBuilder_ == null) {
        if (!(requestCase_ == 11)) {
          request_ = io.axoniq.axonserver.grpc.InstructionAck.getDefaultInstance();
        }
        ackBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.axoniq.axonserver.grpc.InstructionAck, io.axoniq.axonserver.grpc.InstructionAck.Builder, io.axoniq.axonserver.grpc.InstructionAckOrBuilder>(
                (io.axoniq.axonserver.grpc.InstructionAck) request_,
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      requestCase_ = 11;
      onChanged();;
      return ackBuilder_;
    }

    private java.lang.Object instructionId_ = "";
    /**
     * <pre>
     * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
     * </pre>
     *
     * <code>string instruction_id = 12;</code>
     */
    public java.lang.String getInstructionId() {
      java.lang.Object ref = instructionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instructionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
     * </pre>
     *
     * <code>string instruction_id = 12;</code>
     */
    public com.google.protobuf.ByteString
        getInstructionIdBytes() {
      java.lang.Object ref = instructionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instructionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
     * </pre>
     *
     * <code>string instruction_id = 12;</code>
     */
    public Builder setInstructionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      instructionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
     * </pre>
     *
     * <code>string instruction_id = 12;</code>
     */
    public Builder clearInstructionId() {
      
      instructionId_ = getDefaultInstance().getInstructionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream 
     * </pre>
     *
     * <code>string instruction_id = 12;</code>
     */
    public Builder setInstructionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      instructionId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)
  }

  // @@protoc_insertion_point(class_scope:io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction)
  private static final io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction();
  }

  public static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlatformOutboundInstruction>
      PARSER = new com.google.protobuf.AbstractParser<PlatformOutboundInstruction>() {
    @java.lang.Override
    public PlatformOutboundInstruction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PlatformOutboundInstruction(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PlatformOutboundInstruction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlatformOutboundInstruction> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

