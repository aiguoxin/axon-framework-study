// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control.proto

package io.axoniq.axonserver.grpc.control;

/**
 * <pre>
 * Message containing information about the status of a Tracking Event Processor 
 * </pre>
 *
 * Protobuf type {@code io.axoniq.axonserver.grpc.control.EventProcessorInfo}
 */
public  final class EventProcessorInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.axoniq.axonserver.grpc.control.EventProcessorInfo)
    EventProcessorInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EventProcessorInfo.newBuilder() to construct.
  private EventProcessorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EventProcessorInfo() {
    processorName_ = "";
    mode_ = "";
    activeThreads_ = 0;
    running_ = false;
    error_ = false;
    segmentStatus_ = java.util.Collections.emptyList();
    availableThreads_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EventProcessorInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            processorName_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            mode_ = s;
            break;
          }
          case 24: {

            activeThreads_ = input.readInt32();
            break;
          }
          case 32: {

            running_ = input.readBool();
            break;
          }
          case 40: {

            error_ = input.readBool();
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              segmentStatus_ = new java.util.ArrayList<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus>();
              mutable_bitField0_ |= 0x00000020;
            }
            segmentStatus_.add(
                input.readMessage(io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.parser(), extensionRegistry));
            break;
          }
          case 56: {

            availableThreads_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        segmentStatus_ = java.util.Collections.unmodifiableList(segmentStatus_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.axoniq.axonserver.grpc.control.EventProcessorInfo.class, io.axoniq.axonserver.grpc.control.EventProcessorInfo.Builder.class);
  }

  public interface SegmentStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the Segment for which the status is reported 
     * </pre>
     *
     * <code>int32 segment_id = 1;</code>
     */
    int getSegmentId();

    /**
     * <pre>
     * Indicates whether the Segment has "Caught Up" with the Head of the Event Stream 
     * </pre>
     *
     * <code>bool caught_up = 2;</code>
     */
    boolean getCaughtUp();

    /**
     * <pre>
     * Indicates whether the Segment is "Replaying" historic events after a Reset. 
     * </pre>
     *
     * <code>bool replaying = 3;</code>
     */
    boolean getReplaying();

    /**
     * <pre>
     * The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
     * </pre>
     *
     * <code>int32 one_part_of = 4;</code>
     */
    int getOnePartOf();

    /**
     * <pre>
     * The approximate position of the token in the stream. 
     * </pre>
     *
     * <code>int64 token_position = 5;</code>
     */
    long getTokenPosition();

    /**
     * <pre>
     * Information about the error state of the Segment, if applicable. 
     * </pre>
     *
     * <code>string error_state = 6;</code>
     */
    java.lang.String getErrorState();
    /**
     * <pre>
     * Information about the error state of the Segment, if applicable. 
     * </pre>
     *
     * <code>string error_state = 6;</code>
     */
    com.google.protobuf.ByteString
        getErrorStateBytes();
  }
  /**
   * <pre>
   * Message containing information about the status of a Segment of a Tracking Event Processor 
   * </pre>
   *
   * Protobuf type {@code io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus}
   */
  public  static final class SegmentStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)
      SegmentStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentStatus.newBuilder() to construct.
    private SegmentStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentStatus() {
      segmentId_ = 0;
      caughtUp_ = false;
      replaying_ = false;
      onePartOf_ = 0;
      tokenPosition_ = 0L;
      errorState_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              segmentId_ = input.readInt32();
              break;
            }
            case 16: {

              caughtUp_ = input.readBool();
              break;
            }
            case 24: {

              replaying_ = input.readBool();
              break;
            }
            case 32: {

              onePartOf_ = input.readInt32();
              break;
            }
            case 40: {

              tokenPosition_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              errorState_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_SegmentStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_SegmentStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.class, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder.class);
    }

    public static final int SEGMENT_ID_FIELD_NUMBER = 1;
    private int segmentId_;
    /**
     * <pre>
     * The ID of the Segment for which the status is reported 
     * </pre>
     *
     * <code>int32 segment_id = 1;</code>
     */
    public int getSegmentId() {
      return segmentId_;
    }

    public static final int CAUGHT_UP_FIELD_NUMBER = 2;
    private boolean caughtUp_;
    /**
     * <pre>
     * Indicates whether the Segment has "Caught Up" with the Head of the Event Stream 
     * </pre>
     *
     * <code>bool caught_up = 2;</code>
     */
    public boolean getCaughtUp() {
      return caughtUp_;
    }

    public static final int REPLAYING_FIELD_NUMBER = 3;
    private boolean replaying_;
    /**
     * <pre>
     * Indicates whether the Segment is "Replaying" historic events after a Reset. 
     * </pre>
     *
     * <code>bool replaying = 3;</code>
     */
    public boolean getReplaying() {
      return replaying_;
    }

    public static final int ONE_PART_OF_FIELD_NUMBER = 4;
    private int onePartOf_;
    /**
     * <pre>
     * The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
     * </pre>
     *
     * <code>int32 one_part_of = 4;</code>
     */
    public int getOnePartOf() {
      return onePartOf_;
    }

    public static final int TOKEN_POSITION_FIELD_NUMBER = 5;
    private long tokenPosition_;
    /**
     * <pre>
     * The approximate position of the token in the stream. 
     * </pre>
     *
     * <code>int64 token_position = 5;</code>
     */
    public long getTokenPosition() {
      return tokenPosition_;
    }

    public static final int ERROR_STATE_FIELD_NUMBER = 6;
    private volatile java.lang.Object errorState_;
    /**
     * <pre>
     * Information about the error state of the Segment, if applicable. 
     * </pre>
     *
     * <code>string error_state = 6;</code>
     */
    public java.lang.String getErrorState() {
      java.lang.Object ref = errorState_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errorState_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Information about the error state of the Segment, if applicable. 
     * </pre>
     *
     * <code>string error_state = 6;</code>
     */
    public com.google.protobuf.ByteString
        getErrorStateBytes() {
      java.lang.Object ref = errorState_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (segmentId_ != 0) {
        output.writeInt32(1, segmentId_);
      }
      if (caughtUp_ != false) {
        output.writeBool(2, caughtUp_);
      }
      if (replaying_ != false) {
        output.writeBool(3, replaying_);
      }
      if (onePartOf_ != 0) {
        output.writeInt32(4, onePartOf_);
      }
      if (tokenPosition_ != 0L) {
        output.writeInt64(5, tokenPosition_);
      }
      if (!getErrorStateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, errorState_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (segmentId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, segmentId_);
      }
      if (caughtUp_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, caughtUp_);
      }
      if (replaying_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, replaying_);
      }
      if (onePartOf_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, onePartOf_);
      }
      if (tokenPosition_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, tokenPosition_);
      }
      if (!getErrorStateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, errorState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)) {
        return super.equals(obj);
      }
      io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus other = (io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus) obj;

      boolean result = true;
      result = result && (getSegmentId()
          == other.getSegmentId());
      result = result && (getCaughtUp()
          == other.getCaughtUp());
      result = result && (getReplaying()
          == other.getReplaying());
      result = result && (getOnePartOf()
          == other.getOnePartOf());
      result = result && (getTokenPosition()
          == other.getTokenPosition());
      result = result && getErrorState()
          .equals(other.getErrorState());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEGMENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSegmentId();
      hash = (37 * hash) + CAUGHT_UP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCaughtUp());
      hash = (37 * hash) + REPLAYING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReplaying());
      hash = (37 * hash) + ONE_PART_OF_FIELD_NUMBER;
      hash = (53 * hash) + getOnePartOf();
      hash = (37 * hash) + TOKEN_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTokenPosition());
      hash = (37 * hash) + ERROR_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getErrorState().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message containing information about the status of a Segment of a Tracking Event Processor 
     * </pre>
     *
     * Protobuf type {@code io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_SegmentStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_SegmentStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.class, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder.class);
      }

      // Construct using io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        segmentId_ = 0;

        caughtUp_ = false;

        replaying_ = false;

        onePartOf_ = 0;

        tokenPosition_ = 0L;

        errorState_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_SegmentStatus_descriptor;
      }

      @java.lang.Override
      public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus getDefaultInstanceForType() {
        return io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.getDefaultInstance();
      }

      @java.lang.Override
      public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus build() {
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus buildPartial() {
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus result = new io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus(this);
        result.segmentId_ = segmentId_;
        result.caughtUp_ = caughtUp_;
        result.replaying_ = replaying_;
        result.onePartOf_ = onePartOf_;
        result.tokenPosition_ = tokenPosition_;
        result.errorState_ = errorState_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus) {
          return mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus other) {
        if (other == io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.getDefaultInstance()) return this;
        if (other.getSegmentId() != 0) {
          setSegmentId(other.getSegmentId());
        }
        if (other.getCaughtUp() != false) {
          setCaughtUp(other.getCaughtUp());
        }
        if (other.getReplaying() != false) {
          setReplaying(other.getReplaying());
        }
        if (other.getOnePartOf() != 0) {
          setOnePartOf(other.getOnePartOf());
        }
        if (other.getTokenPosition() != 0L) {
          setTokenPosition(other.getTokenPosition());
        }
        if (!other.getErrorState().isEmpty()) {
          errorState_ = other.errorState_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int segmentId_ ;
      /**
       * <pre>
       * The ID of the Segment for which the status is reported 
       * </pre>
       *
       * <code>int32 segment_id = 1;</code>
       */
      public int getSegmentId() {
        return segmentId_;
      }
      /**
       * <pre>
       * The ID of the Segment for which the status is reported 
       * </pre>
       *
       * <code>int32 segment_id = 1;</code>
       */
      public Builder setSegmentId(int value) {
        
        segmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the Segment for which the status is reported 
       * </pre>
       *
       * <code>int32 segment_id = 1;</code>
       */
      public Builder clearSegmentId() {
        
        segmentId_ = 0;
        onChanged();
        return this;
      }

      private boolean caughtUp_ ;
      /**
       * <pre>
       * Indicates whether the Segment has "Caught Up" with the Head of the Event Stream 
       * </pre>
       *
       * <code>bool caught_up = 2;</code>
       */
      public boolean getCaughtUp() {
        return caughtUp_;
      }
      /**
       * <pre>
       * Indicates whether the Segment has "Caught Up" with the Head of the Event Stream 
       * </pre>
       *
       * <code>bool caught_up = 2;</code>
       */
      public Builder setCaughtUp(boolean value) {
        
        caughtUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the Segment has "Caught Up" with the Head of the Event Stream 
       * </pre>
       *
       * <code>bool caught_up = 2;</code>
       */
      public Builder clearCaughtUp() {
        
        caughtUp_ = false;
        onChanged();
        return this;
      }

      private boolean replaying_ ;
      /**
       * <pre>
       * Indicates whether the Segment is "Replaying" historic events after a Reset. 
       * </pre>
       *
       * <code>bool replaying = 3;</code>
       */
      public boolean getReplaying() {
        return replaying_;
      }
      /**
       * <pre>
       * Indicates whether the Segment is "Replaying" historic events after a Reset. 
       * </pre>
       *
       * <code>bool replaying = 3;</code>
       */
      public Builder setReplaying(boolean value) {
        
        replaying_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the Segment is "Replaying" historic events after a Reset. 
       * </pre>
       *
       * <code>bool replaying = 3;</code>
       */
      public Builder clearReplaying() {
        
        replaying_ = false;
        onChanged();
        return this;
      }

      private int onePartOf_ ;
      /**
       * <pre>
       * The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
       * </pre>
       *
       * <code>int32 one_part_of = 4;</code>
       */
      public int getOnePartOf() {
        return onePartOf_;
      }
      /**
       * <pre>
       * The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
       * </pre>
       *
       * <code>int32 one_part_of = 4;</code>
       */
      public Builder setOnePartOf(int value) {
        
        onePartOf_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
       * </pre>
       *
       * <code>int32 one_part_of = 4;</code>
       */
      public Builder clearOnePartOf() {
        
        onePartOf_ = 0;
        onChanged();
        return this;
      }

      private long tokenPosition_ ;
      /**
       * <pre>
       * The approximate position of the token in the stream. 
       * </pre>
       *
       * <code>int64 token_position = 5;</code>
       */
      public long getTokenPosition() {
        return tokenPosition_;
      }
      /**
       * <pre>
       * The approximate position of the token in the stream. 
       * </pre>
       *
       * <code>int64 token_position = 5;</code>
       */
      public Builder setTokenPosition(long value) {
        
        tokenPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The approximate position of the token in the stream. 
       * </pre>
       *
       * <code>int64 token_position = 5;</code>
       */
      public Builder clearTokenPosition() {
        
        tokenPosition_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object errorState_ = "";
      /**
       * <pre>
       * Information about the error state of the Segment, if applicable. 
       * </pre>
       *
       * <code>string error_state = 6;</code>
       */
      public java.lang.String getErrorState() {
        java.lang.Object ref = errorState_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          errorState_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Information about the error state of the Segment, if applicable. 
       * </pre>
       *
       * <code>string error_state = 6;</code>
       */
      public com.google.protobuf.ByteString
          getErrorStateBytes() {
        java.lang.Object ref = errorState_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorState_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Information about the error state of the Segment, if applicable. 
       * </pre>
       *
       * <code>string error_state = 6;</code>
       */
      public Builder setErrorState(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        errorState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about the error state of the Segment, if applicable. 
       * </pre>
       *
       * <code>string error_state = 6;</code>
       */
      public Builder clearErrorState() {
        
        errorState_ = getDefaultInstance().getErrorState();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about the error state of the Segment, if applicable. 
       * </pre>
       *
       * <code>string error_state = 6;</code>
       */
      public Builder setErrorStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        errorState_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)
    }

    // @@protoc_insertion_point(class_scope:io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus)
    private static final io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus();
    }

    public static io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentStatus>
        PARSER = new com.google.protobuf.AbstractParser<SegmentStatus>() {
      @java.lang.Override
      public SegmentStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int PROCESSOR_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object processorName_;
  /**
   * <pre>
   * The logical name of this processor. 
   * </pre>
   *
   * <code>string processor_name = 1;</code>
   */
  public java.lang.String getProcessorName() {
    java.lang.Object ref = processorName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processorName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The logical name of this processor. 
   * </pre>
   *
   * <code>string processor_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getProcessorNameBytes() {
    java.lang.Object ref = processorName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      processorName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MODE_FIELD_NUMBER = 2;
  private volatile java.lang.Object mode_;
  /**
   * <pre>
   * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
   * </pre>
   *
   * <code>string mode = 2;</code>
   */
  public java.lang.String getMode() {
    java.lang.Object ref = mode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      mode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
   * </pre>
   *
   * <code>string mode = 2;</code>
   */
  public com.google.protobuf.ByteString
      getModeBytes() {
    java.lang.Object ref = mode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      mode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACTIVE_THREADS_FIELD_NUMBER = 3;
  private int activeThreads_;
  /**
   * <pre>
   * The number of threads currently actively processing Events 
   * </pre>
   *
   * <code>int32 active_threads = 3;</code>
   */
  public int getActiveThreads() {
    return activeThreads_;
  }

  public static final int RUNNING_FIELD_NUMBER = 4;
  private boolean running_;
  /**
   * <pre>
   * Flag indicating whether the processor is running 
   * </pre>
   *
   * <code>bool running = 4;</code>
   */
  public boolean getRunning() {
    return running_;
  }

  public static final int ERROR_FIELD_NUMBER = 5;
  private boolean error_;
  /**
   * <pre>
   * Flag indicating whether the processor, when stopped, did so because of an irrecoverable Error 
   * </pre>
   *
   * <code>bool error = 5;</code>
   */
  public boolean getError() {
    return error_;
  }

  public static final int SEGMENT_STATUS_FIELD_NUMBER = 6;
  private java.util.List<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus> segmentStatus_;
  /**
   * <pre>
   * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
   *Event Processors.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
   */
  public java.util.List<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus> getSegmentStatusList() {
    return segmentStatus_;
  }
  /**
   * <pre>
   * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
   *Event Processors.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
   */
  public java.util.List<? extends io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder> 
      getSegmentStatusOrBuilderList() {
    return segmentStatus_;
  }
  /**
   * <pre>
   * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
   *Event Processors.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
   */
  public int getSegmentStatusCount() {
    return segmentStatus_.size();
  }
  /**
   * <pre>
   * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
   *Event Processors.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus getSegmentStatus(int index) {
    return segmentStatus_.get(index);
  }
  /**
   * <pre>
   * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
   *Event Processors.
   * </pre>
   *
   * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
   */
  public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder getSegmentStatusOrBuilder(
      int index) {
    return segmentStatus_.get(index);
  }

  public static final int AVAILABLE_THREADS_FIELD_NUMBER = 7;
  private int availableThreads_;
  /**
   * <pre>
   * The number of threads the processor has available to assign to Segments.
   *Will report 0 if all threads are assigned a Segment.
   * </pre>
   *
   * <code>int32 available_threads = 7;</code>
   */
  public int getAvailableThreads() {
    return availableThreads_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getProcessorNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, processorName_);
    }
    if (!getModeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mode_);
    }
    if (activeThreads_ != 0) {
      output.writeInt32(3, activeThreads_);
    }
    if (running_ != false) {
      output.writeBool(4, running_);
    }
    if (error_ != false) {
      output.writeBool(5, error_);
    }
    for (int i = 0; i < segmentStatus_.size(); i++) {
      output.writeMessage(6, segmentStatus_.get(i));
    }
    if (availableThreads_ != 0) {
      output.writeInt32(7, availableThreads_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getProcessorNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, processorName_);
    }
    if (!getModeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mode_);
    }
    if (activeThreads_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, activeThreads_);
    }
    if (running_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, running_);
    }
    if (error_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, error_);
    }
    for (int i = 0; i < segmentStatus_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, segmentStatus_.get(i));
    }
    if (availableThreads_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, availableThreads_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.axoniq.axonserver.grpc.control.EventProcessorInfo)) {
      return super.equals(obj);
    }
    io.axoniq.axonserver.grpc.control.EventProcessorInfo other = (io.axoniq.axonserver.grpc.control.EventProcessorInfo) obj;

    boolean result = true;
    result = result && getProcessorName()
        .equals(other.getProcessorName());
    result = result && getMode()
        .equals(other.getMode());
    result = result && (getActiveThreads()
        == other.getActiveThreads());
    result = result && (getRunning()
        == other.getRunning());
    result = result && (getError()
        == other.getError());
    result = result && getSegmentStatusList()
        .equals(other.getSegmentStatusList());
    result = result && (getAvailableThreads()
        == other.getAvailableThreads());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROCESSOR_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getProcessorName().hashCode();
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + getMode().hashCode();
    hash = (37 * hash) + ACTIVE_THREADS_FIELD_NUMBER;
    hash = (53 * hash) + getActiveThreads();
    hash = (37 * hash) + RUNNING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRunning());
    hash = (37 * hash) + ERROR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getError());
    if (getSegmentStatusCount() > 0) {
      hash = (37 * hash) + SEGMENT_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getSegmentStatusList().hashCode();
    }
    hash = (37 * hash) + AVAILABLE_THREADS_FIELD_NUMBER;
    hash = (53 * hash) + getAvailableThreads();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.axoniq.axonserver.grpc.control.EventProcessorInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Message containing information about the status of a Tracking Event Processor 
   * </pre>
   *
   * Protobuf type {@code io.axoniq.axonserver.grpc.control.EventProcessorInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.axoniq.axonserver.grpc.control.EventProcessorInfo)
      io.axoniq.axonserver.grpc.control.EventProcessorInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.axoniq.axonserver.grpc.control.EventProcessorInfo.class, io.axoniq.axonserver.grpc.control.EventProcessorInfo.Builder.class);
    }

    // Construct using io.axoniq.axonserver.grpc.control.EventProcessorInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSegmentStatusFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      processorName_ = "";

      mode_ = "";

      activeThreads_ = 0;

      running_ = false;

      error_ = false;

      if (segmentStatusBuilder_ == null) {
        segmentStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        segmentStatusBuilder_.clear();
      }
      availableThreads_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.axoniq.axonserver.grpc.control.Control.internal_static_io_axoniq_axonserver_grpc_control_EventProcessorInfo_descriptor;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo getDefaultInstanceForType() {
      return io.axoniq.axonserver.grpc.control.EventProcessorInfo.getDefaultInstance();
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo build() {
      io.axoniq.axonserver.grpc.control.EventProcessorInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo buildPartial() {
      io.axoniq.axonserver.grpc.control.EventProcessorInfo result = new io.axoniq.axonserver.grpc.control.EventProcessorInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.processorName_ = processorName_;
      result.mode_ = mode_;
      result.activeThreads_ = activeThreads_;
      result.running_ = running_;
      result.error_ = error_;
      if (segmentStatusBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          segmentStatus_ = java.util.Collections.unmodifiableList(segmentStatus_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.segmentStatus_ = segmentStatus_;
      } else {
        result.segmentStatus_ = segmentStatusBuilder_.build();
      }
      result.availableThreads_ = availableThreads_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.axoniq.axonserver.grpc.control.EventProcessorInfo) {
        return mergeFrom((io.axoniq.axonserver.grpc.control.EventProcessorInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.axoniq.axonserver.grpc.control.EventProcessorInfo other) {
      if (other == io.axoniq.axonserver.grpc.control.EventProcessorInfo.getDefaultInstance()) return this;
      if (!other.getProcessorName().isEmpty()) {
        processorName_ = other.processorName_;
        onChanged();
      }
      if (!other.getMode().isEmpty()) {
        mode_ = other.mode_;
        onChanged();
      }
      if (other.getActiveThreads() != 0) {
        setActiveThreads(other.getActiveThreads());
      }
      if (other.getRunning() != false) {
        setRunning(other.getRunning());
      }
      if (other.getError() != false) {
        setError(other.getError());
      }
      if (segmentStatusBuilder_ == null) {
        if (!other.segmentStatus_.isEmpty()) {
          if (segmentStatus_.isEmpty()) {
            segmentStatus_ = other.segmentStatus_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSegmentStatusIsMutable();
            segmentStatus_.addAll(other.segmentStatus_);
          }
          onChanged();
        }
      } else {
        if (!other.segmentStatus_.isEmpty()) {
          if (segmentStatusBuilder_.isEmpty()) {
            segmentStatusBuilder_.dispose();
            segmentStatusBuilder_ = null;
            segmentStatus_ = other.segmentStatus_;
            bitField0_ = (bitField0_ & ~0x00000020);
            segmentStatusBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSegmentStatusFieldBuilder() : null;
          } else {
            segmentStatusBuilder_.addAllMessages(other.segmentStatus_);
          }
        }
      }
      if (other.getAvailableThreads() != 0) {
        setAvailableThreads(other.getAvailableThreads());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.axoniq.axonserver.grpc.control.EventProcessorInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.axoniq.axonserver.grpc.control.EventProcessorInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object processorName_ = "";
    /**
     * <pre>
     * The logical name of this processor. 
     * </pre>
     *
     * <code>string processor_name = 1;</code>
     */
    public java.lang.String getProcessorName() {
      java.lang.Object ref = processorName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processorName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The logical name of this processor. 
     * </pre>
     *
     * <code>string processor_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProcessorNameBytes() {
      java.lang.Object ref = processorName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The logical name of this processor. 
     * </pre>
     *
     * <code>string processor_name = 1;</code>
     */
    public Builder setProcessorName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      processorName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The logical name of this processor. 
     * </pre>
     *
     * <code>string processor_name = 1;</code>
     */
    public Builder clearProcessorName() {
      
      processorName_ = getDefaultInstance().getProcessorName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The logical name of this processor. 
     * </pre>
     *
     * <code>string processor_name = 1;</code>
     */
    public Builder setProcessorNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      processorName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object mode_ = "";
    /**
     * <pre>
     * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
     * </pre>
     *
     * <code>string mode = 2;</code>
     */
    public java.lang.String getMode() {
      java.lang.Object ref = mode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
     * </pre>
     *
     * <code>string mode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getModeBytes() {
      java.lang.Object ref = mode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
     * </pre>
     *
     * <code>string mode = 2;</code>
     */
    public Builder setMode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
     * </pre>
     *
     * <code>string mode = 2;</code>
     */
    public Builder clearMode() {
      
      mode_ = getDefaultInstance().getMode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing' 
     * </pre>
     *
     * <code>string mode = 2;</code>
     */
    public Builder setModeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mode_ = value;
      onChanged();
      return this;
    }

    private int activeThreads_ ;
    /**
     * <pre>
     * The number of threads currently actively processing Events 
     * </pre>
     *
     * <code>int32 active_threads = 3;</code>
     */
    public int getActiveThreads() {
      return activeThreads_;
    }
    /**
     * <pre>
     * The number of threads currently actively processing Events 
     * </pre>
     *
     * <code>int32 active_threads = 3;</code>
     */
    public Builder setActiveThreads(int value) {
      
      activeThreads_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of threads currently actively processing Events 
     * </pre>
     *
     * <code>int32 active_threads = 3;</code>
     */
    public Builder clearActiveThreads() {
      
      activeThreads_ = 0;
      onChanged();
      return this;
    }

    private boolean running_ ;
    /**
     * <pre>
     * Flag indicating whether the processor is running 
     * </pre>
     *
     * <code>bool running = 4;</code>
     */
    public boolean getRunning() {
      return running_;
    }
    /**
     * <pre>
     * Flag indicating whether the processor is running 
     * </pre>
     *
     * <code>bool running = 4;</code>
     */
    public Builder setRunning(boolean value) {
      
      running_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag indicating whether the processor is running 
     * </pre>
     *
     * <code>bool running = 4;</code>
     */
    public Builder clearRunning() {
      
      running_ = false;
      onChanged();
      return this;
    }

    private boolean error_ ;
    /**
     * <pre>
     * Flag indicating whether the processor, when stopped, did so because of an irrecoverable Error 
     * </pre>
     *
     * <code>bool error = 5;</code>
     */
    public boolean getError() {
      return error_;
    }
    /**
     * <pre>
     * Flag indicating whether the processor, when stopped, did so because of an irrecoverable Error 
     * </pre>
     *
     * <code>bool error = 5;</code>
     */
    public Builder setError(boolean value) {
      
      error_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag indicating whether the processor, when stopped, did so because of an irrecoverable Error 
     * </pre>
     *
     * <code>bool error = 5;</code>
     */
    public Builder clearError() {
      
      error_ = false;
      onChanged();
      return this;
    }

    private java.util.List<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus> segmentStatus_ =
      java.util.Collections.emptyList();
    private void ensureSegmentStatusIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        segmentStatus_ = new java.util.ArrayList<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus>(segmentStatus_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder> segmentStatusBuilder_;

    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public java.util.List<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus> getSegmentStatusList() {
      if (segmentStatusBuilder_ == null) {
        return java.util.Collections.unmodifiableList(segmentStatus_);
      } else {
        return segmentStatusBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public int getSegmentStatusCount() {
      if (segmentStatusBuilder_ == null) {
        return segmentStatus_.size();
      } else {
        return segmentStatusBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus getSegmentStatus(int index) {
      if (segmentStatusBuilder_ == null) {
        return segmentStatus_.get(index);
      } else {
        return segmentStatusBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder setSegmentStatus(
        int index, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus value) {
      if (segmentStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSegmentStatusIsMutable();
        segmentStatus_.set(index, value);
        onChanged();
      } else {
        segmentStatusBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder setSegmentStatus(
        int index, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder builderForValue) {
      if (segmentStatusBuilder_ == null) {
        ensureSegmentStatusIsMutable();
        segmentStatus_.set(index, builderForValue.build());
        onChanged();
      } else {
        segmentStatusBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder addSegmentStatus(io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus value) {
      if (segmentStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSegmentStatusIsMutable();
        segmentStatus_.add(value);
        onChanged();
      } else {
        segmentStatusBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder addSegmentStatus(
        int index, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus value) {
      if (segmentStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSegmentStatusIsMutable();
        segmentStatus_.add(index, value);
        onChanged();
      } else {
        segmentStatusBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder addSegmentStatus(
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder builderForValue) {
      if (segmentStatusBuilder_ == null) {
        ensureSegmentStatusIsMutable();
        segmentStatus_.add(builderForValue.build());
        onChanged();
      } else {
        segmentStatusBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder addSegmentStatus(
        int index, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder builderForValue) {
      if (segmentStatusBuilder_ == null) {
        ensureSegmentStatusIsMutable();
        segmentStatus_.add(index, builderForValue.build());
        onChanged();
      } else {
        segmentStatusBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder addAllSegmentStatus(
        java.lang.Iterable<? extends io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus> values) {
      if (segmentStatusBuilder_ == null) {
        ensureSegmentStatusIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, segmentStatus_);
        onChanged();
      } else {
        segmentStatusBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder clearSegmentStatus() {
      if (segmentStatusBuilder_ == null) {
        segmentStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        segmentStatusBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public Builder removeSegmentStatus(int index) {
      if (segmentStatusBuilder_ == null) {
        ensureSegmentStatusIsMutable();
        segmentStatus_.remove(index);
        onChanged();
      } else {
        segmentStatusBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder getSegmentStatusBuilder(
        int index) {
      return getSegmentStatusFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder getSegmentStatusOrBuilder(
        int index) {
      if (segmentStatusBuilder_ == null) {
        return segmentStatus_.get(index);  } else {
        return segmentStatusBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public java.util.List<? extends io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder> 
         getSegmentStatusOrBuilderList() {
      if (segmentStatusBuilder_ != null) {
        return segmentStatusBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(segmentStatus_);
      }
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder addSegmentStatusBuilder() {
      return getSegmentStatusFieldBuilder().addBuilder(
          io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.getDefaultInstance());
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder addSegmentStatusBuilder(
        int index) {
      return getSegmentStatusFieldBuilder().addBuilder(
          index, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.getDefaultInstance());
    }
    /**
     * <pre>
     * Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
     *Event Processors.
     * </pre>
     *
     * <code>repeated .io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus segment_status = 6;</code>
     */
    public java.util.List<io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder> 
         getSegmentStatusBuilderList() {
      return getSegmentStatusFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder> 
        getSegmentStatusFieldBuilder() {
      if (segmentStatusBuilder_ == null) {
        segmentStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus.Builder, io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatusOrBuilder>(
                segmentStatus_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        segmentStatus_ = null;
      }
      return segmentStatusBuilder_;
    }

    private int availableThreads_ ;
    /**
     * <pre>
     * The number of threads the processor has available to assign to Segments.
     *Will report 0 if all threads are assigned a Segment.
     * </pre>
     *
     * <code>int32 available_threads = 7;</code>
     */
    public int getAvailableThreads() {
      return availableThreads_;
    }
    /**
     * <pre>
     * The number of threads the processor has available to assign to Segments.
     *Will report 0 if all threads are assigned a Segment.
     * </pre>
     *
     * <code>int32 available_threads = 7;</code>
     */
    public Builder setAvailableThreads(int value) {
      
      availableThreads_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of threads the processor has available to assign to Segments.
     *Will report 0 if all threads are assigned a Segment.
     * </pre>
     *
     * <code>int32 available_threads = 7;</code>
     */
    public Builder clearAvailableThreads() {
      
      availableThreads_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.axoniq.axonserver.grpc.control.EventProcessorInfo)
  }

  // @@protoc_insertion_point(class_scope:io.axoniq.axonserver.grpc.control.EventProcessorInfo)
  private static final io.axoniq.axonserver.grpc.control.EventProcessorInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.axoniq.axonserver.grpc.control.EventProcessorInfo();
  }

  public static io.axoniq.axonserver.grpc.control.EventProcessorInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EventProcessorInfo>
      PARSER = new com.google.protobuf.AbstractParser<EventProcessorInfo>() {
    @java.lang.Override
    public EventProcessorInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EventProcessorInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EventProcessorInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EventProcessorInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.axoniq.axonserver.grpc.control.EventProcessorInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

